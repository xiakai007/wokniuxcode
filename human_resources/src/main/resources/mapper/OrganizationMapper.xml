<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isoftstone.humanresources.dao.OrganizationDao">
	<sql id="BASE_TABLE">
		t_organization t
	</sql>
	<sql id="BASE_COLUMN">
		t.organizationID ,t.contractID ,t.organizationName
		,t.organizationStatus
		,t.organizationLevel,t.organizationMaturity ,t.
		organizationType ,t.parentID
		,t.projectType,t.officeSpace,t.cooperationModel
		,t.skill,t.createDate
		,t.updateDate ,t.costCenter ,t.leader ,t.area ,t.businessLine ,t.BU
		,t.BD ,t.CU
		,t.PDU,t.PO
		,t.existenceValue,t.planningScale,t.isBU,t.imgURL,
		t.organizationAlias,
		t.contractStatus,
		t.scheduledContractDate,
		t.scheduledStartDate,
		t.scheduledEndDate,
		t.postProjectDate,
		t.organizationgroupID
	</sql>

	<resultMap id="organizationInfo"
		type="com.isoftstone.humanresources.domain.OrganizationInformation">
		<result column="organizationID" jdbcType="VARCHAR" property="organizationID" />
		<result column="contractID" jdbcType="VARCHAR" property="contractID" />
		<result column="organizationName" jdbcType="VARCHAR" property="organizationName" />
		<result column="organizationStatus" jdbcType="VARCHAR"
			property="organizationStatus" />
		<result column="organizationLevel" jdbcType="VARCHAR" property="organizationLevel" />
		<result column="organizationMaturity" jdbcType="VARCHAR"
			property="organizationMaturity" />
		<result column="organizationType" jdbcType="VARCHAR" property="organizationType" />
		<result column="parentID" jdbcType="VARCHAR" property="parentID" />
		<result column="projectType" jdbcType="VARCHAR" property="projectType" />
		<result column="officeSpace" jdbcType="VARCHAR" property="officeSpace" />
		<result column="cooperationModel" jdbcType="VARCHAR" property="cooperationModel" />
		<result column="skill" jdbcType="VARCHAR" property="skill" />
		<result column="createDate" jdbcType="VARCHAR" property="createDate" />
		<result column="updateDate" jdbcType="VARCHAR" property="updateDate" />
		<result column="costCenter" jdbcType="VARCHAR" property="costCenter" />
		<result column="leader" jdbcType="VARCHAR" property="leader" />
		<result column="area" jdbcType="VARCHAR" property="area" />
		<result column="businessLine" jdbcType="VARCHAR" property="businessLine" />
		<result column="BU" jdbcType="VARCHAR" property="BU" />
		<result column="BD" jdbcType="VARCHAR" property="BD" />
		<result column="CU" jdbcType="VARCHAR" property="CU" />
		<result column="PDU" jdbcType="VARCHAR" property="PDU" />
		<result column="PO" jdbcType="VARCHAR" property="PO" />
		<result column="existenceValue" jdbcType="VARCHAR" property="existenceValue" />
		<result column="planningScale" jdbcType="VARCHAR" property="planningScale" />
		<result column="isBU" jdbcType="VARCHAR" property="isBU" />
		<result column="imgURL" jdbcType="VARCHAR" property="imgURL" />
		<result column="parentName" jdbcType="VARCHAR" property="parentName" />
		<result column="leaderName" jdbcType="VARCHAR" property="leaderName" />
		<result column="organizationgroupID" jdbcType="VARCHAR"
			property="organizationgroupID" />
	</resultMap>
	<resultMap id="healthInfo"
		type="com.isoftstone.humanresources.domain.HealthCheckInformation">
		<result column="organizationID" jdbcType="VARCHAR" property="organizationID" />
		<result column="ruleType" jdbcType="VARCHAR" property="ruleType" />
		<result column="ruleName" jdbcType="VARCHAR" property="ruleName" />
		<result column="ruleValue" jdbcType="VARCHAR" property="ruleValue" />
		<result column="createTime" jdbcType="VARCHAR" property="createTime" />
		<result column="updateTime" jdbcType="VARCHAR" property="updateTime" />
		<result column="createEmployeeID" jdbcType="VARCHAR" property="createEmployeeID" />
		<result column="updateEmployeeID" jdbcType="VARCHAR" property="updateEmployeeID" />
		<result column="bak" jdbcType="VARCHAR" property="bak" />
	</resultMap>

	<resultMap id="mapID" type="java.util.HashMap">
		<result property="key" column="configName" />
		<result property="value" column="configValue" />
	</resultMap>

	<select id="queryOrganizationByID" parameterType="String"
		resultMap="organizationInfo">
		(SELECT
		<include refid="BASE_COLUMN" />
		,tor.organizationName as parentName,te.employeeName as
		leaderName,torg.organizationName as POName
		FROM
		<include refid="BASE_TABLE" />
		INNER
		join t_organization tor on t.parentID = tor.organizationID
		left
		join
		t_employee te on t.leader = te.employeeID
		left join t_organization
		torg
		on t.po = torg.organizationID
		where t.organizationID =
		#{organizationID,jdbcType =VARCHAR})
		UNION
		(
		SELECT
		<include refid="BASE_COLUMN" />
		,tor.groupName as parentName,te.employeeName as
		leaderName,torg.organizationName as POName
		FROM
		<include refid="BASE_TABLE" />
		INNER
		join t_organization_group tor on t.parentID = tor.groupID
		left
		join
		t_employee te on t.leader = te.employeeID
		left join t_organization
		torg
		on t.po = torg.organizationID
		where t.organizationID =
		#{organizationID,jdbcType =VARCHAR}
		)
		UNION
		(SELECT
		t.organizationgroupID
		as organizationID ,t.contractID ,t.organizationName
		,t.organizationStatus
		,t.organizationLevel,t.organizationMaturity ,t.
		organizationType ,t.parentID
		,t.projectType,t.officeSpace,t.cooperationModel
		,t.skill,t.createDate
		,t.updateDate ,t.costCenter ,t.leader ,t.area ,t.businessLine ,t.BU
		,t.BD ,t.CU
		,t.PDU,t.PO
		,t.existenceValue,t.planningScale,t.isBU,t.imgURL,
		t.organizationAlias,
		t.contractStatus,
		t.scheduledContractDate,
		t.scheduledStartDate,
		t.scheduledEndDate,
		t.postProjectDate,
		t.organizationgroupID
		,tor.organizationName as
		parentName,te.employeeName as leaderName,torg.organizationName as
		POName
		FROM
		t_organization t
		INNER join t_organization tor on t.parentID
		= tor.organizationID
		left join t_employee te on t.leader =
		te.employeeID
		left join t_organization torg on t.po =
		torg.organizationID
		where t.organizationgroupID =
		#{organizationID,jdbcType =VARCHAR}
		AND t.organizationgroupID &lt;&gt;
		0
		LIMIT 1)
		UNION
		(
		SELECT
		t.leader as organizationID ,t.contractID
		,t.organizationName
		,t.organizationStatus
		,t.organizationLevel,t.organizationMaturity ,t.
		organizationType
		,t.parentID
		,t.projectType,t.officeSpace,t.cooperationModel
		,t.skill,t.createDate
		,t.updateDate ,t.costCenter ,t.leader ,t.area
		,t.businessLine ,t.BU
		,t.BD ,t.CU
		,t.PDU,t.PO
		,t.existenceValue,t.planningScale,t.isBU,t.imgURL,
		t.organizationAlias,
		t.contractStatus,
		t.scheduledContractDate,
		t.scheduledStartDate,
		t.scheduledEndDate,
		t.postProjectDate,
		t.organizationgroupID
		,tor.organizationName as
		parentName,te.employeeName as leaderName,torg.organizationName as
		POName
		FROM
		t_organization t
		INNER join t_organization tor on t.parentID
		= tor.organizationID
		left join t_employee te on t.leader =
		te.employeeID
		left join t_organization torg on t.po =
		torg.organizationID
		where t.leader = #{organizationID,jdbcType
		=VARCHAR} and t.organizationType = 'ProjectTeam'
		LIMIT 1
		)
	</select>

	<select id="queryChildsByID" parameterType="String" resultMap="organizationInfo">
		(SELECT
		<include refid="BASE_COLUMN" />
		,tor.organizationName as parentName,te.employeeName as leaderName
		FROM
		<include refid="BASE_TABLE" />
		left join t_organization tor on t.parentID = tor.organizationID
		left
		join t_employee te on t.leader = te.employeeID
		where t.parentID =
		#{organizationID,jdbcType =VARCHAR}
		and t.organizationType &lt;&gt; 'CU')
		UNION
		(select
		t.organizationgroupID as organizationID,'' as
		contractID,t2.groupName
		as
		organizationName,'' as organizationStatus,
		'' as organizationLevel,''
		as organizationMaturity,'CU' as
		organizationType,
		t.parentID,'' as
		projectType,'' as officeSpace,'' as
		cooperationModel,'' as
		skill,'' as
		createDate,
		'' as updateDate,'' as
		costCenter,'' as leader,t.area as
		area,'' as
		businessLine,'' as BU,''
		as
		BD,'' as CU,'' as PDU,'' as PO,
		''
		as existenceValue,'' as
		planningScale,'0' as isBU,'' as imgURL,'' as
		organizationAlias,'' as
		contractStatus,
		'' as scheduledContractDate,''
		as scheduledStartDate,''
		as
		scheduledEndDate,'' as postProjectDate,'' as
		organizationgroupID
		,'' as parentName,'' as leaderName
		from
		t_organization t
		INNER
		JOIN t_organization_group t2 ON
		t.organizationgroupID = t2.groupID
		where t.parentID = #{organizationID,jdbcType =VARCHAR}
		group by
		t.area,t.organizationgroupID,t2.groupName,t.parentID)
		UNION
		(
		SELECT
		organizationAlias as organizationID,'' as
		contractID,organizationAlias
		as
		organizationName,'工作中' as organizationStatus,
		'' as organizationLevel,''
		as organizationMaturity,'ProjectTeam' as
		organizationType,
		parentID,'' as
		projectType,'' as officeSpace,'' as
		cooperationModel,'' as
		skill,'' as
		createDate,
		'' as updateDate,'' as
		costCenter,'' as leader,area as
		area,'' as
		businessLine,'' as BU,''
		as
		BD,'' as CU,'' as PDU,'' as PO,
		''
		as existenceValue,'' as
		planningScale,'0' as isBU,'' as imgURL,'' as
		organizationAlias,'' as
		contractStatus,
		'' as scheduledContractDate,''
		as scheduledStartDate,''
		as
		scheduledEndDate,'' as postProjectDate,'' as
		organizationgroupID
		,'' as parentName,'' as leaderName
		from
		t_organization 
		where organizationType = 'ProjectTeam' AND parentID in
		(select organizationID from t_organization where organizationgroupID =
		#{organizationID,jdbcType =VARCHAR})
		AND organizationStatus = '工作中' AND organizationAlias is not NULL
		GROUP BY area,organizationAlias,parentID)
	</select>

	<select id="queryHealthCheckByID" parameterType="String"
		resultMap="healthInfo">
		(SELECT
		t.organizationID,t.ruleType,t.ruleName,t.ruleValue,t.createTime,t.updateTime,t.createEmployeeID,t.updateEmployeeID,t.bak
		FROM
		t_organization_check_health_rule t
		where t.organizationID =
		#{organizationID,jdbcType =VARCHAR}
		and t.ruleType =
		#{ruleType,jdbcType =VARCHAR})
		union
		(
		SELECT
		t.organizationID,t.ruleType,concat(t.ruleName,'(',tc.bak,')') as
		ruleName,t.ruleValue,t.createTime,t.updateTime,t.createEmployeeID,t.updateEmployeeID,t.bak
		FROM
		t_organization_check_health_rule t
		INNER JOIN t_system_config tc ON
		t.ruleName = tc.configName
		where t.organizationID =
		#{organizationID,jdbcType =VARCHAR}
		<if test="ruleType == 'HuaweiLevel'">
			and t.ruleType =
			'isoftRank'
		</if>
		<if test="ruleType != 'HuaweiLevel'">
			and t.ruleType =
			''
		</if>
		)
	</select>

	<insert id="importExcelOrganization" parameterType="java.util.List">


		REPLACE INTO t_organization
		(
		organizationID,
		contractID,
		organizationName,
		organizationStatus,
		organizationLevel,
		organizationMaturity,
		organizationType,
		parentID,
		projectType,
		officeSpace,
		cooperationModel,
		skill,
		createDate,
		costCenter,
		leader,
		area,
		businessLine,
		BU,
		BD,
		CU,
		PDU,
		PO,
		existenceValue,
		planningScale,
		isBU,
		imgURL,
		organizationAlias,
		contractStatus,
		scheduledContractDate,
		scheduledStartDate,
		scheduledEndDate,
		postProjectDate
		)
		VALUES
		<if test="null != listOrg and listOrg.size() > 0">
			<foreach collection="listOrg" item="item" index="index"
				separator=",">
				(
				#{item.organizationID},
				#{item.contractID},
				#{item.organizationName},
				#{item.organizationStatus},
				#{item.organizationLevel},
				#{item.organizationMaturity},
				#{item.organizationType},
				#{item.parentID},
				#{item.projectType},
				#{item.officeSpace},
				#{item.cooperationModel},
				#{item.skill},
				NOW(),
				#{item.costCenter},
				#{item.leader},
				#{item.area},
				#{item.businessLine},
				#{item.BU},
				#{item.BD},
				#{item.CU},
				#{item.PDU},
				#{item.PO},
				#{item.existenceValue},
				#{item.planningScale},
				#{item.isBU},
				#{item.imgURL},
				#{item.organizationAlias},
				#{item.contractStatus},
				#{item.scheduledContractDate},
				#{item.scheduledStartDate},
				#{item.scheduledEndDate},
				#{item.postProjectDate}
				)
			</foreach>
		</if>
	</insert>
	<select id="getTreeOrganization" resultMap="organizationInfo">
		(select
		t.leader as
		organizationID,'' as contractID,CONCAT(te.employeeName,'(','leader)')
		as
		organizationName,''
		as organizationStatus,
		'' as organizationLevel,''
		as
		organizationMaturity,'leader' as
		organizationType,
		t.PO as parentID,''
		as projectType,'' as officeSpace,'' as
		cooperationModel,'' as skill,''
		as createDate,
		'' as updateDate,'' as costCenter,'' as leader,'' as
		area,'' as
		businessLine,'' as BU,'' as BD,'' as CU,'' as PDU,'' as PO,
		'' as existenceValue,'' as planningScale,'0' as isBU,'' as imgURL,''
		as
		organizationAlias,'' as contractStatus,
		'' as
		scheduledContractDate,'' as scheduledStartDate,'' as
		scheduledEndDate,'' as postProjectDate
		from t_organization t left join
		t_employee te
		on t.leader = te.employeeID
		where t.organizationType =
		'ProjectTeam'
		and t.PO &lt;&gt; '' and
		te.issStatus = '在职'
		group by
		t.PO,t.leader,t.parentID)
		UNION
		(
		SELECT
		organizationID ,contractID
		,CONCAT(organizationName,'(',organizationType,')') as organizationName
		,organizationStatus
		,organizationLevel,organizationMaturity ,
		organizationType ,parentID
		,projectType,officeSpace,cooperationModel
		,skill,createDate
		,updateDate
		,costCenter ,leader ,area ,businessLine
		,BU
		,BD ,CU
		,PDU,PO
		,existenceValue,planningScale,isBU,imgURL,
		organizationAlias,
		contractStatus,
		scheduledContractDate,
		scheduledStartDate,
		scheduledEndDate,
		postProjectDate
		FROM
		t_organization
		where
		organizationType &lt;&gt; 'ProjectTeam' and organizationType
		&lt;&gt;
		'CU'
		)
		UNION
		(
		select
		t.organizationgroupID as organizationID,'' as
		contractID,t2.groupName as
		organizationName,'' as organizationStatus,
		'' as organizationLevel,'' as organizationMaturity,'CU' as
		organizationType,
		t.parentID,'' as projectType,'' as officeSpace,'' as
		cooperationModel,'' as
		skill,'' as createDate,
		'' as updateDate,'' as
		costCenter,'' as leader,t.area as area,'' as
		businessLine,'' as BU,''
		as
		BD,'' as CU,'' as PDU,'' as PO,
		'' as existenceValue,'' as
		planningScale,'0' as isBU,'' as imgURL,'' as
		organizationAlias,'' as
		contractStatus,
		'' as scheduledContractDate,'' as scheduledStartDate,''
		as
		scheduledEndDate,'' as postProjectDate
		from t_organization t
		INNER
		JOIN t_organization_group t2 ON t.organizationgroupID = t2.groupID
		where organizationType = 'CU'
		group by t.area,t.organizationgroupID,t2.groupName,t.parentID
		)
		UNION
		(select
		DISTINCT
		t.leader as
		organizationID,'' as
		contractID,CONCAT(te.employeeName,'(',c.organizationType,'head)') as
		organizationName,''
		as organizationStatus,
		'' as organizationLevel,'' as
		organizationMaturity,CONCAT(c.organizationType,'head') as
		organizationType,
		c.organizationID as
		parentID,''
		as projectType,'' as
		officeSpace,'' as
		cooperationModel,''
		as skill,''
		as createDate,
		'' as
		updateDate,'' as costCenter,'' as
		leader,'' as
		area,'' as
		businessLine,'' as BU,'' as BD,'' as CU,'' as
		PDU,'' as PO,
		'' as
		existenceValue,'' as planningScale,'0' as isBU,''
		as imgURL,''
		as
		organizationAlias,'' as contractStatus,
		'' as
		scheduledContractDate,''
		as scheduledStartDate,'' as
		scheduledEndDate,'' as postProjectDate
		from
		t_organization t left join
		t_employee te
		on t.leader = te.employeeID
		INNER JOIN (select
		leader,organizationID,organizationType from
		t_organization where organizationType =
		'BD' or organizationType =
		'BU') c ON c.leader = t.leader
		where
		t.organizationType =
		'ProjectTeam'
		and
		te.issStatus = '在职' and t.leader
		in (select leader from
		t_organization where organizationType = 'BD' or
		organizationType =
		'BU')
		group by c.organizationID,t.leader,t.parentID)
	</select>

	<select id="getParentId" parameterType="String" resultMap="organizationInfo">
		select
		tor.organizationID ,tor.contractID ,tor.organizationName
		,tor.organizationStatus
		,tor.organizationLevel,tor.organizationMaturity ,
		tor.organizationType
		,tor.parentID ,tor.projectType,tor.officeSpace,tor.cooperationModel
		,tor.skill,tor.createDate ,tor.updateDate ,tor.costCenter ,tor.leader
		,tor.area ,tor.businessLine ,tor.BU ,tor.BD ,tor.CU
		,tor.PDU,tor.PO
		,tor.existenceValue,tor.organizationgroupID
		from t_employee te
		left join
		t_organization tor
		on
		te.cu = tor.organizationID
		where 1 = 1
		<if test="employeeID != null and employeeID != ''">
			and te.employeeID = #{employeeID}
		</if>
	</select>
	<select id="toObtainBU" parameterType="String" resultMap="organizationInfo">
		select
		<include refid="BASE_COLUMN" />
		from
		<include refid="BASE_TABLE" />
		where
		isBU = 1
		and
		parentID = #{organizationID}
	</select>
	<select id="getOrganizationID" parameterType="String"
		resultType="String">
		select
		organizationID
		from
		t_employee
		where
		employeeID =
		#{employeeID}
	</select>
	<!-- 校验新增组织是否存在 -->
	<select id="checkOrg" parameterType="String" resultType="int">
		select
		count(1) from t_organization where organizationID = #{organizationID}
	</select>
	<!-- 校验新增组织名是否存在 -->
	<select id="checkOrgName" parameterType="String" resultType="int">
		select
		count(1) from t_organization where organizationName =
		#{organizationName}
	</select>
	<!-- 查询全量部门信息 -->
	<select id="queryOrgInforList" parameterType="java.lang.String"
		resultMap="organizationInfo">
		SELECT
		organizationID,
		organizationName
		FROM
		t_organization
		where
		organizationType = 'ProjectTeam'
		and isBU = 0 AND leader in (SELECT
		employeeID from t_employee)
		<if test="name != null and name !=''">
			and
			organizationName LIKE CONCAT(CONCAT('%',#{name}),'%')
			or
			organizationAlias
			LIKE CONCAT(CONCAT('%',#{name}),'%')
		</if>
	</select>
	<!-- 组织新增 -->
	<insert id="addOrganizationInfo"
		parameterType="com.isoftstone.humanresources.domain.OrganizationInformation">
		INSERT INTO T_ORGANIZATION
		<trim prefix="(" suffix=")" suffixOverrides=",">
			organizationID,
			<if test="contractID != null and contractID != ''">
				contractID,
			</if>
			organizationName,
			<if test="organizationStatus != null and organizationStatus != ''">
				organizationStatus,
			</if>
			<if test="organizationLevel != null and organizationLevel != ''">
				organizationLevel,
			</if>
			<if test="organizationMaturity != null and organizationMaturity != ''">
				organizationMaturity,
			</if>
			organizationType,
			<if test="parentID != null and parentID != ''">
				parentID,
			</if>
			<if test="projectType != null and projectType != ''">
				projectType,
			</if>
			<if test="officeSpace != null and officeSpace != ''">
				officeSpace,
			</if>
			<if test="cooperationModel != null and cooperationModel != ''">
				cooperationModel,
			</if>
			<if test="skill != null and skill != ''">
				skill,
			</if>
			createDate,
			<if test="costCenter != null and costCenter != ''">
				costCenter,
			</if>
			<if test="leader != null and leader != ''">
				leader,
			</if>
			<if test="area != null and area != ''">
				area,
			</if>
			<if test="businessLine != null and businessLine != ''">
				businessLine,
			</if>
			<if test="BU != null and BU != ''">
				BU,
			</if>
			<if test="BD != null and BD != ''">
				BD,
			</if>
			<if test="CU != null and CU != ''">
				CU,
			</if>
			<if test="PDU != null and PDU != ''">
				PDU,
			</if>
			<if test="PO != null and PO != ''">
				PO,
			</if>
			<if test="existenceValue != null and existenceValue != ''">
				existenceValue,
			</if>
			<if test="planningScale != null and planningScale != ''">
				planningScale,
			</if>
			<if test="isBU != null and isBU != ''">
				isBU,
			</if>
			<if test="imgURL != null and imgURL != ''">
				imgURL,
			</if>
			<if test="organizationAlias != null and organizationAlias != ''">
				organizationAlias,
			</if>
			<if test="contractStatus != null and contractStatus != ''">
				contractStatus,
			</if>
			<if test="scheduledContractDate != null and scheduledContractDate != ''">
				scheduledContractDate,
			</if>
			<if test="PO != null and PO != ''">
				PO,
			</if>
			scheduledStartDate,
			<if test="scheduledEndDate != null and scheduledEndDate != ''">
				scheduledEndDate,
			</if>
			<if test="postProjectDate != null and postProjectDate != ''">
				postProjectDate
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			#{organizationID},
			<if test="contractID != null and contractID != ''">
				#{contractID},
			</if>
			#{organizationName},
			<if test="organizationStatus != null and organizationStatus != ''">
				#{organizationStatus},
			</if>
			<if test="organizationLevel != null and organizationLevel != ''">
				#{organizationLevel},
			</if>
			<if test="organizationMaturity != null and organizationMaturity != ''">
				#{organizationMaturity},
			</if>
			#{organizationType},
			<if test="parentID != null and parentID != ''">
				#{parentID},
			</if>
			<if test="projectType != null and projectType != ''">
				#{projectType},
			</if>
			<if test="officeSpace != null and officeSpace != ''">
				#{officeSpace},
			</if>
			<if test="cooperationModel != null and cooperationModel != ''">
				#{cooperationModel},
			</if>
			<if test="skill != null and skill != ''">
				#{skill},
			</if>
			now(),
			<if test="costCenter != null and costCenter != ''">
				#{costCenter},
			</if>
			<if test="leader != null and leader != ''">
				#{leader},
			</if>
			<if test="area != null and area != ''">
				#{area},
			</if>
			<if test="businessLine != null and businessLine != ''">
				#{businessLine},
			</if>
			<if test="BU != null and BU != ''">
				#{BU},
			</if>
			<if test="BD != null and BD != ''">
				#{BD},
			</if>
			<if test="CU != null and CU != ''">
				#{CU},
			</if>
			<if test="PDU != null and PDU != ''">
				#{PDU},
			</if>
			<if test="PO != null and PO != ''">
				#{PO},
			</if>
			<if test="existenceValue != null and existenceValue != ''">
				#{existenceValue},
			</if>
			<if test="planningScale != null and planningScale != ''">
				#{planningScale},
			</if>
			<if test="isBU != null and isBU != ''">
				#{isBU},
			</if>
			<if test="imgURL != null and imgURL != ''">
				#{imgURL},
			</if>
			<if test="organizationAlias != null and organizationAlias != ''">
				#{organizationAlias},
			</if>
			<if test="contractStatus != null and contractStatus != ''">
				#{contractStatus},
			</if>
			<if test="scheduledContractDate != null and scheduledContractDate != ''">
				#{scheduledContractDate},
			</if>
			<if test="PO != null and PO != ''">
				#{PO},
			</if>
			#{scheduledStartDate},
			<if test="scheduledEndDate != null and scheduledEndDate != ''">
				#{scheduledEndDate},
			</if>
			<if test="postProjectDate != null and postProjectDate != ''">
				#{postProjectDate}
			</if>
		</trim>
	</insert>
	<!-- 查询leader名称和工号 -->
	<select id="queryLeaderList" parameterType="String"
		resultType="com.isoftstone.humanresources.domain.organization.QueryLeaderVO">
		select
		employeeID as leader,
		employeeName as leaderName
		from t_employee
		where 1 = 1
		<if test="name != null and name != ''">
			and (employeeID LIKE CONCAT('%',#{name},'%')
			or
			employeeName
			LIKE CONCAT('%',#{name},'%'))
			and (projectTeam = '' OR
			projectTeam is
			null)
		</if>
	</select>

	<!-- 修改组织信息 -->
	<update id="updateOrganization"
		parameterType="com.isoftstone.humanresources.domain.OrganizationInformation">
		update T_ORGANIZATION
		set
		<trim suffixOverrides=",">
			<if test="contractID != null and contractID != ''">
				contractID = #{contractID},
			</if>
			organizationName = #{organizationName},
			<if test="organizationStatus != null and organizationStatus != ''">
				organizationStatus = #{organizationStatus},
			</if>
			<if test="organizationLevel != null and organizationLevel != ''">
				organizationLevel = #{organizationLevel},
			</if>
			<if test="organizationMaturity != null and organizationMaturity != ''">
				organizationMaturity = #{organizationMaturity},
			</if>
			organizationType = #{organizationType},
			<if test="parentID != null and parentID != ''">
				parentID = #{parentID},
			</if>
			<if test="projectType != null and projectType != ''">
				projectType = #{projectType},
			</if>
			<if test="officeSpace != null and officeSpace != ''">
				officeSpace = #{officeSpace},
			</if>
			<if test="cooperationModel != null and cooperationModel != ''">
				cooperationModel = #{cooperationModel},
			</if>
			<if test="skill != null and skill != ''">
				skill = #{skill},
			</if>
			updateDate = now(),
			<if test="costCenter != null and costCenter != ''">
				costCenter = #{costCenter},
			</if>
			<if test="leader != null and leader != ''">
				leader = #{leader},
			</if>
			<if test="area != null and area != ''">
				area = #{area},
			</if>
			<if test="businessLine != null and businessLine != ''">
				businessLine = #{businessLine},
			</if>
			<if test="BU != null and BU != ''">
				BU = #{BU},
			</if>
			<if test="BD != null and BD != ''">
				BD = #{BD},
			</if>
			<if test="CU != null and CU != ''">
				CU = #{CU},
			</if>
			<if test="PDU != null and PDU != ''">
				PDU = #{PDU},
			</if>
			<if test="PO != null and PO != ''">
				PO = #{PO},
			</if>
			<if test="existenceValue != null and existenceValue != ''">
				existenceValue = #{existenceValue},
			</if>
			<if test="planningScale != null and planningScale != ''">
				planningScale = #{planningScale},
			</if>
			<if test="isBU != null and isBU != ''">
				isBU = #{isBU},
			</if>
			<if test="imgURL != null and imgURL != ''">
				imgURL = #{imgURL},
			</if>
			<if test="organizationAlias != null and organizationAlias != ''">
				organizationAlias = #{organizationAlias},
			</if>
			<if test="contractStatus != null and contractStatus != ''">
				contractStatus = #{contractStatus},
			</if>
			<if test="scheduledContractDate != null and scheduledContractDate != ''">
				scheduledContractDate = #{scheduledContractDate},
			</if>
			<if test="PO != null and PO != ''">
				PO = #{PO},
			</if>
			scheduledStartDate = #{scheduledStartDate},
			<if test="scheduledEndDate != null and scheduledEndDate != ''">
				scheduledEndDate = #{scheduledEndDate},
			</if>
			<if test="postProjectDate != null and postProjectDate != ''">
				postProjectDate = #{postProjectDate}
			</if>
		</trim>
		where
		organizationID = #{organizationID}
		and organizationType in
		('ProjectTeam','PO')
	</update>
	<insert id="addHealthCheckInfor" parameterType="java.util.List">
		insert into
		t_organization_check_health_rule
		(
		organizationID,
		ruleType,
		ruleName,
		ruleValue,
		createTime,
		createEmployeeID
		)
		VALUES
		<foreach collection="listCheck" item="item" index="index"
			separator=",">
			(
			#{item.organizationID,jdbcType =VARCHAR},
			#{item.ruleType,jdbcType =VARCHAR},
			#{item.ruleName,jdbcType
			=VARCHAR},
			#{item.ruleValue,jdbcType =VARCHAR},
			now(),
			#{item.createEmployeeID,jdbcType =VARCHAR}
			)
		</foreach>
	</insert>

	<select id="healthCheckByID" parameterType="String" resultType="int">
		SELECT
		count(1)
		FROM
		t_organization_check_health_rule
		where organizationID
		= #{organizationID,jdbcType =VARCHAR}
		and ruleType =
		#{ruleType,jdbcType =VARCHAR}
		and ruleName = #{ruleName,jdbcType
		=VARCHAR}
	</select>

	<update id="updateHealthCheckInfor" parameterType="java.util.List">
		update
		t_organization_check_health_rule
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="ruleValue =case" suffix="end,">
				<foreach collection="listCheck" item="item" index="index">
					when
					(organizationID=#{item.organizationID,jdbcType =VARCHAR}
					and
					ruleType = #{item.ruleType,jdbcType =VARCHAR}
					and ruleName =
					#{item.ruleName,jdbcType =VARCHAR})
					then #{item.ruleValue,jdbcType
					=VARCHAR}
				</foreach>
			</trim>
			<trim prefix="updateEmployeeID =case" suffix="end,">
				<foreach collection="listCheck" item="item" index="index">
					when
					(organizationID=#{item.organizationID,jdbcType =VARCHAR}
					and
					ruleType = #{item.ruleType,jdbcType =VARCHAR}
					and ruleName =
					#{item.ruleName,jdbcType =VARCHAR})
					then
					#{item.createEmployeeID,jdbcType =VARCHAR}
				</foreach>
			</trim>
			<trim prefix="updateTime =case" suffix="end,">
				<foreach collection="listCheck" item="item" index="index">
					when
					(organizationID=#{item.organizationID,jdbcType =VARCHAR}
					and
					ruleType = #{item.ruleType,jdbcType =VARCHAR}
					and ruleName =
					#{item.ruleName,jdbcType =VARCHAR})
					then now()
				</foreach>
			</trim>
		</trim>
		where 1 =1
		<foreach collection="listCheck" item="item" index="index"
			open="and organizationID in (" separator="," close=")">
			#{item.organizationID,jdbcType =VARCHAR}
		</foreach>
		<foreach collection="listCheck" item="item" index="index"
			open="and ruleType in (" separator="," close=")">
			#{item.ruleType,jdbcType =VARCHAR}
		</foreach>
		<foreach collection="listCheck" item="item" index="index"
			open="and ruleName in (" separator="," close=")">
			#{item.ruleName,jdbcType =VARCHAR}
		</foreach>
	</update>
	<!-- 修改项目po数据 -->
	<update id="updateProjectPO"
		parameterType="com.isoftstone.humanresources.domain.OrganizationInformation">
		update
		t_organization
		set PO = #{orgInfo.PO}
		where 1 =1
		<foreach collection="orgInfo.projectIds" item="item" index="index"
			open="and organizationID in (" separator="," close=")">
			#{item,jdbcType
			=VARCHAR}
		</foreach>
	</update>
	<!-- 查询技能树 -->
	<select id="getTreeOrganizationSkill" resultMap="organizationInfo">
		(
		select
		organizationID ,organizationName,parentID,organizationType
		FROM
		t_organization
		where
		organizationType &lt;&gt; 'ProjectTeam' and
		organizationType &lt;&gt; 'CU' and
		organizationType &lt;&gt; 'PO'
		)
		UNION
		(SELECT t.organizationgroupID as
		organizationID,t2.groupName as
		organizationName,t.parentID,"CU" as
		organizationType from
		t_organization t
		INNER JOIN t_organization_group
		t2 ON
		t.organizationgroupID = t2.groupID
		group by
		t.organizationgroupID,t2.groupName,t.parentID)
		UNION
		(select UUID() as
		organizationID,ts.configValue as
		organizationName,t1.organizationgroupID as parentID,"skill" as
		organizationType from t_organization t INNER JOIN t_organization t1 ON
		t.parentID = t1.organizationID
		INNER JOIN t_employee te ON
		t.organizationID = te.projectTeam
		LEFT JOIN t_system_config ts ON
		te.skill = ts.configName
		where t.organizationType = 'ProjectTeam' group
		by
		t1.organizationgroupID,ts.configValue)
	</select>
	<!-- 查询技能树 -->
	<select id="queryProjectPO" parameterType="String" resultMap="organizationInfo">
		select
		t.leader as organizationID,te.employeeName as
		organizationName,'leader' as
		organizationType,
		t.PO as parentID
		from
		t_organization t left join t_employee te
		on t.leader = te.employeeID
		where t.organizationType = 'ProjectTeam' and t.PO = #{organizationID}
		and
		te.issStatus = '在职'
		group by t.PO,t.leader;
	</select>
	<!-- 查询leader下的项目 -->
	<select id="queryProjectLeader" parameterType="String"
		resultMap="organizationInfo">
		select
		<include refid="BASE_COLUMN" />
		,te.employeeName as leaderName
		FROM
		<include refid="BASE_TABLE" />
		left join t_employee te on t.leader = te.employeeID
		where
		leader =
		#{organizationID}
		and organizationType = 'ProjectTeam'
		<if test="organizationStatus == 'working'">
			and t.organizationStatus = '工作中'
		</if>
		ORDER BY scheduledStartDate
	</select>
	<!-- 查询技能下对应项目 -->
	<select id="querySkillMessage" parameterType="String"
		resultType="com.isoftstone.humanresources.domain.organization.QuerySkillProjectVO">
		select t.organizationID as organizationId,t.organizationName
		as
		organizationName,
		ts.configValue as skill,t1.organizationgroupID as
		organizationGroupId,count(1) as
		skillCount,t.organizationType as
		organizationType
		from t_organization t INNER JOIN t_organization t1 ON
		t.parentID =
		t1.organizationID
		INNER JOIN t_employee te ON
		t.organizationID = te.projectTeam
		LEFT JOIN t_system_config ts ON
		te.skill = ts.configName
		where t.organizationType = 'ProjectTeam'
		<if test="organizationGroupId != null and organizationGroupId != ''">
			AND t1.organizationgroupID = #{organizationGroupId}
		</if>
		AND te.issStatus = '在职'
		<if test="skill != null and skill != ''">
			AND ts.configValue = #{skill}
		</if>
		<if test="leader != null and leader != ''">
			and t.leader = #{leader}
		</if>
		group by
		t.parentID,ts.configValue,t.organizationID
	</select>
	<!-- 查询技能项目下对应员工信息 -->
	<select id="queryempList" parameterType="String"
		resultType="com.isoftstone.humanresources.domain.EmployeeInformation">
		select
		t.employeeName,t.officeSpace,t.costCenter,tsc.configValue,t.imgURL,t.issStatus
		,t.employeeID,t.sex
		from t_employee t INNER JOIN t_system_config tsc ON
		t.skill =
		tsc.configName
		where projectTeam = #{projectTeam} AND
		tsc.configValue = #{skill} AND
		t.issStatus = '在职';
	</select>




	<!--查询备份人员信息 -->
	<select id="queryEmployeeBackups" parameterType="java.lang.String"
		resultType="com.isoftstone.humanresources.domain.EmployeeBackups">
		SELECT
		e.ID,
		e.employeeID,
		e.backupType,
		e.backupContent,
		e.backupEmployeeID,
		e.organizationID,
		e.planCompleteDate,
		e.currentProgress,
		e.createDate,
		e.completeDate,
		e.pm,
		e.cuHead,
		e.bak,
		t.`employeeName`,
		m.`employeeName`
		AS backEmpName,
		z.organizationName,
		em.employeeName AS pmName,
		emp.employeeName AS cuHeadName,
		s.configValue AS backupName
		FROM
		t_employee_backups e
		LEFT JOIN
		t_employee t
		ON
		e.employeeID=t.`employeeID`
		LEFT JOIN
		t_employee m
		ON
		e.backupEmployeeID=m.employeeID
		LEFT JOIN
		t_employee em
		ON
		e.pm=em.employeeID
		LEFT JOIN
		t_employee emp
		ON
		e.cuHead=emp.employeeID
		LEFT JOIN
		t_organization z
		ON
		e.`organizationID`=z.`organizationID`
		LEFT
		JOIN
		t_system_config s
		ON s.configName = e.backupType
		WHERE
		leader=#{leader}
	</select>
	<!--查询备份类型的下拉框 -->
	<select id="queryBackupName"
		resultType="com.isoftstone.humanresources.domain.SysConfigResponse">
		SELECT
		configName,
		configValue
		FROM
		t_system_config
		WHERE
		configType='employeeBackup'
	</select>



	<!-- 查询po下项目信息 -->
	<select id="queryPOProjectInfo" parameterType="String"
		resultType="com.isoftstone.humanresources.domain.OrganizationInformation">
		SELECT
		<include refid="BASE_COLUMN" />
		FROM
		<include refid="BASE_TABLE" />
		where t.PO = #{PO}
		and t.organizationStatus = '工作中'
	</select>

	<!-- 修改项目下人员信息 -->
	<update id="updateProjectPerson" parameterType="java.util.List">
		update
		T_EMPLOYEE
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="projectTeam =case" suffix="end,">
				<foreach collection="personList" item="item" index="index">
					when
					employeeId = #{item.employeeId}
					then #{item.organizationID}
				</foreach>
			</trim>
		</trim>
		where 1 = 1
		<foreach collection="personList" item="item" index="index"
			open="and employeeId in (" separator="," close=")">
			#{item.employeeId}
		</foreach>
	</update>
	<!--新增人员备份数据 -->
	<insert id="addEmployeeBackups"
		parameterType="com.isoftstone.humanresources.domain.EmployeeBackups">
		insert
		into
		t_employee_backups
		(
		employeeID,
		backupType,
		backupContent,
		backupEmployeeID,
		organizationID,
		planCompleteDate,
		currentProgress,
		createDate,
		completeDate,
		pm,
		cuHead,
		bak,
		CU
		)
		values
		(
		#{employeeID},
		#{backupType},
		#{backupContent},
		#{backupEmployeeID},
		#{organizationID},
		#{planCompleteDate},
		#{currentProgress},
		#{createDate},
		#{completeDate},
		#{pm},
		#{cuHead},
		#{bak},
		#{CU}
		)
	</insert>
	<!--根据pm查询CU -->
	<select id="queryCUBypm" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		SELECT
		CU
		FROM
		t_employee
		WHERE employeeID = #{pm}
	</select>
	<!--新增备份数据到历史表 -->
	<insert id="addEmployeeBackupsHistory"
		parameterType="com.isoftstone.humanresources.domain.EmployeeBackups">
		insert
		into
		t_employee_backups_history
		(
		employeeID,
		backupType,
		backupContent,
		backupEmployeeID,
		organizationID,
		planCompleteDate,
		currentProgress,
		createDate,
		completeDate,
		pm,
		cuHead,
		bak,
		CU
		)
		values
		(
		#{employeeID},
		#{backupType},
		#{backupContent},
		#{backupEmployeeID},
		#{organizationID},
		#{planCompleteDate},
		#{currentProgress},
		#{createDate},
		#{completeDate},
		#{pm},
		#{cuHead},
		#{bak},
		#{CU}
		)
	</insert>
	<!--更新人员备份 -->
	<update id="updateEmployeeBackups"
		parameterType="com.isoftstone.humanresources.domain.EmployeeBackups">

		update
		t_employee_backups
		set
		employeeID=#{employeeID},
		backupType=#{backupType},
		backupContent=#{backupContent},
		backupEmployeeID=#{backupEmployeeID},
		organizationID=#{organizationID},
		planCompleteDate=#{planCompleteDate},
		currentProgress=#{currentProgress},
		completeDate=#{completeDate},
		pm=#{pm},
		cuHead=#{cuHead},
		bak=#{bak},
		updateDate=#{updateDate},
		CU=#{CU}
		where
		ID = #{id}
	</update>

	<!--新增备份数据到备份历史表 -->
	<insert id="updateEmployeeBackupsHistory"
		parameterType="com.isoftstone.humanresources.domain.EmployeeBackups">
		insert
		into
		t_employee_backups_history
		(
		employeeID,
		backupType,
		backupContent,
		backupEmployeeID,
		organizationID,
		planCompleteDate,
		currentProgress,
		createDate,
		completeDate,
		pm,
		cuHead,
		bak,
		updateDate,
		CU
		)
		values
		(
		#{employeeID},
		#{backupType},
		#{backupContent},
		#{backupEmployeeID},
		#{organizationID},
		#{planCompleteDate},
		#{currentProgress},
		#{createDate},
		#{completeDate},
		#{pm},
		#{cuHead},
		#{bak},
		#{updateDate},
		#{CU}

		)
	</insert>
	<!-- 查询 -->
	<select id="getPoInfoByLeader" parameterType="String"
		resultType="com.isoftstone.humanresources.domain.OrganizationInformation">
		SELECT
		<include refid="BASE_COLUMN" />
		FROM
		<include refid="BASE_TABLE" />
		where
		t.leader = #{leader}
		and t.organizationType = 'PO'
		and t.parentID =
		#{parentID}
		<if test="organizationID != null and organizationID != ''">
			AND t.organizationID = #{organizationID}
		</if>
	</select>
	<!--查询cuhead下拉框列表 -->
	<select id="queryCuHeadList"
		resultType="com.isoftstone.humanresources.domain.QueryCuheadResponse">
		SELECT DISTINCT
		t.userID,
		e.employeename,
		e.employeeID
		FROM
		tr_user_usergroup tr
		LEFT JOIN t_user t
		ON t.userID = tr.userID
		LEFT JOIN
		t_employee e
		ON t.employeeID = e.employeeID
		LEFT JOIN t_usergroup g
		ON
		tr.groupID = g.groupID
		WHERE groupName = 'CU HEAD用户组'
	</select>
	<!--查询CU下面的项目信息 -->
	<select id="queryCuProgress" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT
		SUM(currentProgress) / COUNT(currentProgress)
		FROM
		t_employee_backups
		WHERE CU in (select organizationID from t_organization where organizationgroupID = #{organizationID})
	</select>

	<!--查询CU下面的项目组 -->
	<select id="queryOrg" parameterType="java.lang.String"
		resultType="com.isoftstone.humanresources.domain.OrganizationInformation">
		SELECT DISTINCT t.organizationID,o.organizationName
		FROM
		t_employee_backups t
		LEFT JOIN t_organization o
		ON
		t.`organizationID`=o.organizationID
		WHERE
		o.organizationStatus='工作中'
		AND
		t.CU=#{organizationID}
	</select>

	<!--查询CU下面项目组的备份进度 -->
	<select id="queryProgress" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT
		SUM(currentProgress) / COUNT(currentProgress)
		FROM
		t_employee_backups
		WHERE organizationID in (SELECT organizationID from t_organization where organizationAlias = #{organizationID})
	</select>

	<!--查询项目组成员 -->
	<select id="queryEmp" parameterType="java.lang.String"
		resultType="com.isoftstone.humanresources.domain.EmployeeInformation">
		(SELECT DISTINCT
		s.`employeeID`,
		s.employeeName
		FROM
		t_employee
		s
		INNER JOIN
		(SELECT DISTINCT
		t.`employeeID`
		FROM
		t_employee_backups t
		WHERE t.organizationID = #{organizationID}) d
		ON s.employeeID =
		d.employeeID)
		UNION
		(SELECT DISTINCT
		s.`employeeID`,
		s.employeeName
		FROM
		t_employee
		s
		INNER JOIN
		(SELECT DISTINCT
		t.`employeeID`
		FROM
		t_employee_backups t
		WHERE t.organizationID in (SELECT organizationID from t_organization where
		organizationAlias = #{organizationID})) d
		ON s.employeeID =
		d.employeeID)
	</select>

	<!--查询项目组下成员的备份进度 -->
	<select id="queryPersonProgress" parameterType="java.lang.Integer"
		resultType="java.lang.String">
		SELECT
		SUM(currentProgress)/COUNT(currentProgress)
		FROM
		t_employee_backups
		WHERE
		employeeID =#{employeeID}
	</select>


	<!--查询备份详情 -->
	<select id="queryBackupDetail" parameterType="java.lang.String"
		resultType="com.isoftstone.humanresources.domain.EmployeeBackups">
		SELECT
		e.ID,
		e.employeeID,
		e.backupType,
		e.backupContent,
		e.backupEmployeeID,
		e.organizationID,
		e.planCompleteDate,
		e.currentProgress,
		e.createDate,
		e.completeDate,
		e.pm,
		e.cuHead,
		e.bak,
		t.`employeeName`,
		m.`employeeName`
		AS backEmpName,
		z.organizationName,
		em.employeeName AS pmName,
		emp.employeeName AS cuHeadName,
		s.configValue AS backupName
		FROM
		t_employee_backups e
		LEFT JOIN
		t_employee t
		ON
		e.employeeID=t.`employeeID`

		LEFT JOIN
		t_employee m
		ON

		e.backupEmployeeID=m.employeeID

		LEFT JOIN
		t_employee em
		ON
		e.pm=em.employeeID

		LEFT JOIN
		t_employee emp
		ON
		e.cuHead=emp.employeeID

		LEFT JOIN
		t_organization z
		ON
		e.`organizationID`=z.`organizationID`
		LEFT
		JOIN
		t_system_config s
		ON s.configName = e.backupType
		WHERE
		e.`CU`in (select organizationID from t_organization where organizationgroupID = #{organizationID})
		or
		e.organizationID in (SELECT
						organizationID
					FROM
						t_organization
					WHERE
						organizationAlias = #{organizationID})
		or
		e.employeeID=#{organizationID}
	</select>

	<!--批量插入人员备份数据 -->
	<insert id="importExcelEmployeeBackups" parameterType="java.util.List">
		insert into
		t_employee_backups
		(
		employeeID,
		backupType,
		backupContent,
		backupEmployeeID,
		organizationID,
		planCompleteDate,
		currentProgress,
		createDate,
		completeDate,
		pm,
		cuHead,
		updateDate,
		CU,
		bak
		)
		values
		<foreach collection="list" item="item" index="index" open=""
			close="" separator=",">
			(
			#{item.employeeID, jdbcType=INTEGER},
			#{item.backupType, jdbcType=VARCHAR},
			#{item.backupContent,
			jdbcType=VARCHAR},
			#{item.backupEmployeeID, jdbcType=INTEGER},
			#{item.organizationID, jdbcType=VARCHAR},
			#{item.planCompleteDate,
			jdbcType=VARCHAR},
			#{item.currentProgress, jdbcType=VARCHAR},
			#{item.createDate, jdbcType=DATE},
			#{item.completeDate,
			jdbcType=DATE},
			#{item.pm, jdbcType=VARCHAR},
			#{item.cuHead,
			jdbcType=VARCHAR},
			#{item.updateDate, jdbcType=DATE},
			#{item.CU,
			jdbcType=VARCHAR},
			#{item.bak, jdbcType=VARCHAR}

			)
		</foreach>
	</insert>
	<!--删除备份数据 -->
	<delete id="deleteEmployeeBackups">
		DELETE
		FROM
		t_employee_backups
	</delete>

	<!--查询execl导出备份数据 -->
	<select id="queryEmployeeBackupsforExcel"
		resultType="com.isoftstone.humanresources.domain.EmployeeBackups">
		select
		employeeID,
		backupType,
		backupContent,
		backupEmployeeID,
		organizationID,
		planCompleteDate,
		currentProgress,
		createDate,
		completeDate,
		pm,
		cuHead,
		updateDate,
		bak
		from
		t_employee_backups
	</select>

	<!--查询完成备份的信息 -->
	<select id="queryCompleteEmployeeBackups" parameterType="java.lang.String"
		resultType="com.isoftstone.humanresources.domain.EmployeeBackups">
		SELECT
		ID,
		employeeID,
		backupType,
		backupContent,
		backupEmployeeID,
		organizationID,
		planCompleteDate,
		currentProgress,
		createDate,
		completeDate,
		pm,
		cuHead,
		updateDate,
		CU,
		bak
		FROM
		t_employee_backups
		WHERE completeDate = #{date}
		AND currentProgress =
		'100%'
	</select>
	<!--查询cu权限  -->
	<select id="getCuInfoList" parameterType="String" resultType="com.isoftstone.humanresources.domain.OrganizationInformation">
	select t.organizationgroupID as organizationID,tog.groupName as organizationName,t.parentID 
	from t_organization t 
	INNER JOIN t_organization_group tog ON t.organizationgroupID = tog.groupID
	where t.leader = (
	SELECT leader from t_organization where organizationID = #{organizationID}) 
	AND organizationType = 'CU' 
	GROUP BY t.organizationgroupID,tog.groupName,t.parentID
	</select>
</mapper>