<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isoftstone.humanresources.dao.EmployeeDao">
	<sql id="BASE_TABLE">
		t_employee
	</sql>

	<sql id="BASE_COLUMN">
		t.employeeID,t.employeeName,t.cardID,t.issStatus,t.isImportant,t.isImportantCore,t.isOnShore,t.officeSpace,t.cooperationModel,
		t.skill,t.entryDate,t.leaveDate,t.costCenter,t.entryLong,t.workLong,t.birthday,t.graducationSchool,t.huaweiLevel,
		t.is211,t.reporter,t.reporter_workid,t.area,t.mobile,t.businessLine,t.position,t.email,t.nameCard,t.BG,t.BD,t.BU,t.CU,t.PDU,t.PO,
		t.sex,t.organizationID,t.projectTeam,t.bak,t.imgURL,t.coverImg
	</sql>

	<sql id="WORK_TIME_DAY">
		employeeID,workStatus,personalStatus,dayCount,workDay,dayCatagray,firstRecordTime,lastRecordTime,actualTimes,holidayTimes,outWorkTimes,absenteeismTimes,
		workBadTimes,penalizeTimes,overtimes,extendTimes,annualLeave,restTimes,marriageLeave,maternityLeave,paternityLeave,breastFeeding,sickLeave,funeralLeave,
		personalLeave,overtimeRestTimes,outsideTimes,copCatagray,copModel,monthInShore,dayBringPcOutShore,lateTimes
	</sql>
	<sql id="WORK_TIME_MOTH">
	employeeID,workStatus,personalStatus,dayCount,month,shouldDays,actualDays,shouldTimes,
	actualTimes,holidayTimes,lateTimes,LeaveEarlyTimes,absenteeismTimes,oweTimes,overtimeNum,
	overtimes,extendTimes,notBringPcTimes,BringPcTimes,inDay,outDay,annualLeave,restTimes,
	marriageLeave,maternityLeave,prenatalLeave,paternityLeave,breastFeeding,sickLeave,
	funeralLeave,personalLeave,overtimeRestTimes,outsideTimes,ehs,insufficientReasons,
	noWorkReasons,monthInsufficientReasons,bd
	</sql>
	<resultMap id="performanceEntity"
		type="com.isoftstone.humanresources.domain.screen.EmployeePerformanceEntity">
		<result column="employeeID" jdbcType="VARCHAR" property="employeeID" />
		<result column="employeeName" jdbcType="VARCHAR" property="employeeName" />
		<result column="start_date" jdbcType="VARCHAR" property="start_date" />
		<result column="end_date" jdbcType="VARCHAR" property="end_date" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="score" jdbcType="VARCHAR" property="score" />
		<result column="level" jdbcType="VARCHAR" property="level" />
		<result column="maternity_leave" jdbcType="VARCHAR" property="maternity_leave" />
		<result column="is_gt_45" jdbcType="VARCHAR" property="is_gt_45" />
		<result column="is_manage_agreed" jdbcType="VARCHAR" property="is_manage_agreed" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="quarter" jdbcType="VARCHAR" property="quarter" />
		<result column="year" jdbcType="VARCHAR" property="year" />
	</resultMap>

	<resultMap id="employeeInfo"
		type="com.isoftstone.humanresources.domain.EmployeeInformation">
		<result column="employeeID" jdbcType="INTEGER" property="employeeID" />
		<result column="employeeName" jdbcType="VARCHAR" property="employeeName" />
		<result column="cardID" jdbcType="VARCHAR" property="cardID" />
		<result column="issStatus" jdbcType="VARCHAR" property="issStatus" />
		<result column="isImportant" jdbcType="VARCHAR" property="isImportant" />
		<result column="isImportantCore" jdbcType="VARCHAR" property="isImportantCore" />
		<result column="isOnShore" jdbcType="VARCHAR" property="isOnShore" />
		<result column="officeSpace" jdbcType="VARCHAR" property="officeSpace" />
		<result column="cooperationModel" jdbcType="VARCHAR" property="cooperationModel" />
		<result column="skill" jdbcType="VARCHAR" property="skill" />
		<result column="entryDate" jdbcType="VARCHAR" property="entryDate" />
		<result column="leaveDate" jdbcType="VARCHAR" property="leaveDate" />
		<result column="costCenter" jdbcType="VARCHAR" property="costCenter" />
		<result column="entryLong" jdbcType="VARCHAR" property="entryLong" />
		<result column="workLong" jdbcType="VARCHAR" property="workLong" />
		<result column="birthday" jdbcType="VARCHAR" property="birthday" />
		<result column="graducationSchool" jdbcType="VARCHAR" property="graducationSchool" />
		<result column="huaweiLevel" jdbcType="VARCHAR" property="huaweiLevel" />
		<result column="is211" jdbcType="VARCHAR" property="is211" />
		<result column="reporter" jdbcType="VARCHAR" property="reporter" />
		<result column="reporter_workid" jdbcType="VARCHAR" property="reporter_workid" />
		<result column="area" jdbcType="VARCHAR" property="area" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="businessLine" jdbcType="VARCHAR" property="businessLine" />
		<result column="position" jdbcType="VARCHAR" property="position" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="nameCard" jdbcType="VARCHAR" property="nameCard" />
		<result column="BG" jdbcType="VARCHAR" property="BG" />
		<result column="BD" jdbcType="VARCHAR" property="BD" />
		<result column="CU" jdbcType="VARCHAR" property="CU" />
		<result column="PDU" jdbcType="VARCHAR" property="PDU" />
		<result column="PO" jdbcType="VARCHAR" property="PO" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="organizationID" jdbcType="VARCHAR" property="organizationID" />
		<result column="projectTeam" jdbcType="VARCHAR" property="projectTeam" />
		<result column="bak" jdbcType="VARCHAR" property="bak" />
		<result column="imgURL" jdbcType="VARCHAR" property="imgURL" />
		<result column="certificate" jdbcType="VARCHAR" property="certificate" />
		<result column="organizationName" jdbcType="VARCHAR" property="organizationName" />
		<result column="certificateName" jdbcType="VARCHAR" property="certificateName" />
		<result column="isFristLogin" jdbcType="BOOLEAN" property="isFristLogin" />
		<result column="cuName" jdbcType="VARCHAR" property="cuName" />
		<result column="userID" jdbcType="VARCHAR" property="userID" />
		<result column="coverImg" jdbcType="VARCHAR" property="coverImg" />
	</resultMap>

	<!--t_employee_projects-表和t_organization关联查询-->
	<resultMap id="empProject" type="com.isoftstone.humanresources.domain.EmployeeProjectInformation">
		<id column="ID" property="ID"></id>
		<result column="employeeID" property="employeeID"></result>
		<result column="projectID" property="projectID"></result>
		<result column="projectDescription" property="projectDescription"></result>
		<result column="entryProjectDate" property="entryProjectDate"></result>
		<result column="leaveProjectDate" property="leaveProjectDate"></result>
		<result column="projectRole" property="projectRole"></result>
		<result column="projectContribution" property="projectContribution"></result>
		<result column="leaveProjectCause" property="leaveProjectCause"></result>
		<result column="createTime" property="createTime"></result>
		<result column="updateTime" property="updateTime"></result>
		<result column="bak" property="bak"></result>
		<association property="organizationInformation" column="t_organization" resultMap="org"/>
	</resultMap>

	<resultMap id="org" type="com.isoftstone.humanresources.domain.OrganizationInformation">
		<id column="organizationID" property="organizationName"></id>
		<result column="organizationName" property="organizationName"></result>
	</resultMap>



	<!--t_employee_skill-表和t_system_config关联查询-->
	<resultMap id="empSkill" type="com.isoftstone.humanresources.domain.useremployee.SkillInVO">
		<id column="skillId" property="skillId"></id>
		<result column="employeeID" property="employeeID"></result>
		<result column="skill" property="skill"></result>
		<result column="proficiency" property="proficiency"></result>
		<result column="createTime" property="createTime"></result>
		<result column="updateTime" property="updateTime"></result>
		<result column="bak" property="bak"></result>
		<association property="sys" column="t_employee_skill" resultMap="skill"/>
	</resultMap>
	<resultMap id="skill" type="com.isoftstone.humanresources.domain.SystemConfigInformation">
		<id column="systemID" property="systemID"></id>
		<result column="configName" property="configName"></result>
		<result column="configValue" property="configValue"></result>
	</resultMap>
	<select id="queryByOrganizationID" parameterType="java.lang.String"
		resultMap="employeeInfo">
		(SELECT
		<include refid="BASE_COLUMN" />
		FROM
		<include refid="BASE_TABLE" />
		t
		where 1=1
		and ${organizationType} = #{organizationID,jdbcType
		=VARCHAR})
		UNION
		(SELECT
		<include refid="BASE_COLUMN" />
		FROM
		<include refid="BASE_TABLE" />
		t
		where 1=1
		AND ${organizationType} in ( SELECT organizationID from t_organization where organizationgroupID = #{organizationID,jdbcType =VARCHAR} and organizationgroupID &lt;&gt; 0))
		UNION
		(SELECT
		<include refid="BASE_COLUMN" />
		FROM
		<include refid="BASE_TABLE" />
		t
		where 1=1
		AND ${organizationType} in ( SELECT organizationID from t_organization where organizationAlias = #{organizationID,jdbcType =VARCHAR}))
	</select>

	<select id="getPerformanceDistribution" resultMap="performanceEntity"
		parameterType="list">
		select
		t.employeeID,t.start_date,t.end_date,t.type,t.score,t.level,t.maternity_leave,t.is_gt_45,t.is_manage_agreed,t.remark,t.quarter,t.year
		,te.employeeName
		from t_employee_performance t ,t_employee te
		LEFT JOIN
		t_organization o1 on t.organizationID = o1.organizationID
		where
		t.employeeID=te.employeeID and te.organizationID in
		<foreach item="item" collection="list" separator="," open="("
			close=")" index="">
			#{item.organizationID, jdbcType=VARCHAR}
		</foreach>
	</select>

	<insert id="importExcelEmployee" parameterType="java.util.List">


		REPLACE INTO t_employee
		(
		employeeID,
		employeeName,
		cardID,
		issStatus,
		isImportant,
		isImportantCore,
		isOnShore,
		officeSpace,
		cooperationModel,
		skill,
		entryDate,
		costCenter,
		entryLong,
		workLong,
		birthday,
		graducationSchool,
		huaweiLevel,
		is211,
		reporter,
		reporter_workid,
		area,
		mobile,
		businessLine,
		position,
		email,
		nameCard,
		BG,
		BD,
		BU,
		CU,
		PDU,
		PO,
		sex,
		organizationID,
		projectTeam,
		bak,
		imgURL,
		rank
		)
		VALUES
		<if test="null != listOrg and listOrg.size() > 0">
			<foreach collection="listOrg" item="item" index="index"
				separator=",">
				(
				#{item.employeeID},
				#{item.employeeName},
				#{item.cardID},
				#{item.issStatus},
				#{item.isImportant},
				#{item.isImportantCore},
				#{item.isOnShore},
				#{item.officeSpace},
				#{item.cooperationModel},
				#{item.skill},
				#{item.entryDate},
				#{item.costCenter},
				CONVERT(#{item.entryLong},DECIMAL(10,5)),
				CONVERT(#{item.workLong},DECIMAL(10,5)),
				#{item.birthday},
				#{item.graducationSchool},
				#{item.huaweiLevel},
				#{item.is211},
				#{item.reporter},
				#{item.reporter_workid},
				#{item.area},
				#{item.mobile},
				#{item.businessLine},
				#{item.position},
				#{item.email},
				#{item.nameCard},
				#{item.BG},
				#{item.BD},
				#{item.BU},
				#{item.CU},
				#{item.PDU},
				#{item.PO},
				#{item.sex},
				#{item.organizationID},
				#{item.projectTeam},
				#{item.bak},
				#{item.imgURL},
				#{item.rank}
				)
			</foreach>
		</if>
	</insert>
	<insert id="addUser" parameterType="java.util.List">


		INSERT INTO t_user
		(
		username,
		password,
		status,
		employeeID,
		creatTime
		)
		VALUES
		<if test="null != userList and userList.size() > 0">
			<foreach collection="userList" item="item" index="index"
				separator=",">
				(
				#{item.username},
				#{item.password},
				#{item.status},
				#{item.employeeID},
				now()
				)
			</foreach>
		</if>
	</insert>
	<!--查询员工技能 -->
	<select id="querySkill" parameterType="long"
		resultType="com.isoftstone.humanresources.domain.useremployee.SkillInVO">
		select
		tes.skillId,
		tes.employeeID,
		tes.skill,
		tes.skillName,
		tes.proficiency,
		tes.createTime,
		tes.updateTime,
		tes.bak
		from
		t_employee_skill tes
		left join t_system_config tsc
		on
		tes.skill =
		tsc.configName
		where
		tes.employeeID =
		#{employeeID}
	</select>

	<!-- 新增员工技能 -->
	<insert id="addEmployeeSkill" parameterType="java.util.List">
		insert into t_employee_skill
		(
			employeeID,skill,skillName,proficiency,createTime,bak
		)
		VALUES
		<if test="null != skillInVOList and skillInVOList.size() > 0">
			<foreach collection="skillInVOList" item="item" index="index" separator=",">
				(
				#{item.employeeID},
				#{item.skill},
				#{item.skillName},
				#{item.proficiency},
				now(),
				#{item.bak}
				)
			</foreach>
		</if>
	</insert>
	<!-- 修改员工技能 -->
	<update id="updateEmployeeSkill" parameterType="com.isoftstone.humanresources.domain.useremployee.SkillInVO" >
      update
      t_employee_skill
      set
      updateTime = now()
		<if test="skill != null and skill !=''">
			,skill=#{skill}
		</if>
		<if test="skillName != null and skillName !=''">
			,skillName=#{skillName}
		</if>
		<if test="bak != null and bak !=''">
			,bak=#{bak}
		</if>
		<if test="proficiency != null ">
			,proficiency=#{proficiency}
		</if>
      where
        skillId = #{skillId}
  </update>

	<!-- 查询员工绩效 -->
	<select id="queryPerformance" parameterType="long"
		resultType="com.isoftstone.humanresources.domain.EmployeePerformanceInformation">
		select
		employeeID,
		start_date as startDate,
		end_date as
		endDate,
		type,
		score,
		level,
		maternity_leave as maternityLeave,
		is_gt_45 as
		isGt45,
		is_manage_agreed as isManageAgreed,
		remark,
		quarter,
		year
		from
		t_employee_performance
		where
		unix_timestamp(year) BETWEEN
		unix_timestamp(YEAR(NOW())-2)
		and
		unix_timestamp(YEAR(NOW()))
		and
		employeeID = #{employeeID}
	</select>
	<!-- -->
	<select id="queryProject" parameterType="long"
		resultMap="empProject">
		select
		ID,
		employeeID,
		projectID,
		projectDescription,
		entryProjectDate,
		leaveProjectDate,
		projectRole,
		projectContribution,
		leaveProjectCause,
		createTime,
		updateTime,
		bak,
		o.organizationName
		from
		t_employee_projects t
		left join t_organization o
		on
		t.projectID=o.organizationID
		where
		employeeID = #{employeeID}
	</select>

	<select id="queryWorkTimeDay" parameterType="long"
		resultType="com.isoftstone.humanresources.domain.EmployeeWorkTimeDayInformation">
		select
		<include refid="WORK_TIME_DAY" />
		from
		t_employee_work_time_day
		where
		employeeID = #{employeeID}
		and
		unix_timestamp(workDay)
		BETWEEN unix_timestamp(DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 30
		DAY),"%Y-%m-%d 00:00:00"))
		AND
		unix_timestamp(DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 0 DAY),"%Y-%m-%d 23:59:59"))
	</select>

	<select id="queryUserInfo" parameterType="long"
		resultType="com.isoftstone.humanresources.domain.useremployee.UserEmployeeVO">
		select
		tu.userID,
		tu.username,
		tog.organizationName,
		TIMESTAMPDIFF(YEAR,te.birthday,CURDATE()) as age,
		Convert(TIMESTAMPDIFF(MONTH,te.entryDate,CURDATE())/12,decimal(10,1)) as worklong,
		te.imgURL as imgURL
		from
		t_employee te
		left join
		t_user tu
		on
		te.employeeID = tu.employeeID
		left join
		t_organization tog
		ON
		te.cu = tog.organizationID
		where
		te.employeeID = #{employeeID}
	</select>
	<select id="queryEmployeeInfo" parameterType="long"
		resultMap="employeeInfo">
		SELECT
		<include refid="BASE_COLUMN" />, if(tu.password is NULL,false,true)  as isFristLogin  ,tr.organizationName as cuName ,tu.userID as userID
		FROM
		<include refid="BASE_TABLE" /> t
		left join t_user tu on t.employeeID = tu.employeeID
		left join t_organization tr on t.CU = tr.organizationID
		where
		t.employeeID = #{employeeID}
	</select>
	<select id="queryMonthList" parameterType="long"
		resultType="com.isoftstone.humanresources.domain.EmployeeWorkTimeMonthInfomation">
		SELECT
		<include refid="WORK_TIME_MOTH" />
		FROM
		t_employee_work_time_month
		where
		employeeID = #{employeeID}
		AND month BETWEEN DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 4
		MONTH),"%Y-%m")
		AND
		DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 0 MONTH),"%Y-%m");
	</select>



	<!--分页条件查询员工-->
	<select id="queryEmpList" parameterType="com.isoftstone.humanresources.domain.QueryEmpListParam"
			resultMap="employeeInfo">
		SELECT
		t.employeeID,
		t.employeeName,
		t.cardID,
		t.issStatus,
		t.isImportant,
		t.isImportantCore,
		t.isOnShore,
		t.officeSpace,
		t.cooperationModel,
		ts.configValue AS skill,
		t.entryDate,
		t.leaveDate,
		t.costCenter,
		t.entryLong,
		t.workLong,
		t.birthday,
		t.graducationSchool,
		t.huaweiLevel,
		t.is211,
		t.reporter,
		t.reporter_workid,
		t.area,
		t.mobile,
		t.businessLine,
		t.position,
		t.email,
		t.nameCard,
		t.BG,
		t.BD,
		t.BU,
		t.CU,
		t.PDU,
		t.PO,
		t.sex,
		t.organizationID,
		t.projectTeam,
		t.bak,
		t.imgURL,
		o.organizationName,
		b.certificateName
		FROM
		t_employee t
		LEFT JOIN
		(SELECT GROUP_CONCAT(certificateName) AS certificateName ,employeeID FROM t_employee_certificate GROUP BY employeeID) b

		ON t.employeeID=b.employeeID
		left join
		(SELECT GROUP_CONCAT(riskName) AS riskName ,employeeID FROM t_employee_risk GROUP BY employeeID) r
		on t.employeeID=r.employeeID
		LEFT JOIN t_system_config ts ON t.skill = ts.configName
		LEFT JOIN t_organization o ON
		t.projectTeam=o.organizationID
		<where>
			<if test="bD != null and bD !=''">
				t.BD=#{bD}
			</if>
			<if test="bU != null and bU !=''">
				and  t.BU=#{bU}
			</if>

			<if test="cU != null and cU !=''">
				and  t.CU IN (
				SELECT organizationID FROM t_organization WHERE leader = (
				SELECT leader FROM t_organization WHERE organizationID = #{cU}) AND organizationType = 'CU')
			</if>

			<if test="pDU != null and pDU !=''">
				and   t.PDU=#{pDU}
			</if>
			<if test="projectTeam != null and projectTeam !=''">
				and   t.projectTeam=#{projectTeam}
			</if>
			<if test="pO != null and pO !=''">
				and   t.PO=#{pO}
			</if>
			<if test="employeeID != null and employeeID !=''">
				and   t.employeeID=#{employeeID}
			</if>
			<if test="employeeName != null and employeeName !=''">
				and
				t.employeeName LIKE CONCAT(CONCAT('%',#{employeeName}),'%')
			</if>
			<if test="issStatus != null and issStatus !='' ">
				and
				t.issStatus=#{issStatus}
			</if>
			<if test="costCenter != null and costCenter !=''">
				and
				t.costCenter LIKE CONCAT(CONCAT('%',#{costCenter}),'%')
			</if>
			<if test="organizationName != null and organizationName !=''">
				and o.organizationName LIKE CONCAT(CONCAT('%',#{organizationName}),'%')
			</if>
			<if test="certificateName != null and certificateName !=''">
				and b.certificateName LIKE CONCAT(CONCAT('%',#{certificateName}),'%')
			</if>
			<if test="riskStatus == '有风险'">
				and
                (riskName IS NOT NULL OR riskName <![CDATA[!= ]]> '')
			</if>
			<if test="riskStatus == '无风险'">
				and
                (riskName IS  NULL OR riskName = '')
			</if>
		</where>
	</select>

	<!--查询风险-->
	<select id="queryRiskList" parameterType="java.lang.Integer"
			resultType="com.isoftstone.humanresources.domain.EmployeeRisk">
		select
		ID,
		employeeID,
		riskName,
		`desc`,
		createTime,
		modifyTime,
		creator,
		modifier
		from
		t_employee_risk
		<where>
			employeeID=#{employeeID}
		</where>
	</select>


	<!--新增员工风险-->
	<insert id="addRisk" parameterType="com.isoftstone.humanresources.domain.EmployeeRisk" >

	insert into
	t_employee_risk
	(
		employeeID,
		riskName,
		`desc`,
		createTime,
		creator

	)
	values(
	#{employeeID},
	#{riskName},
	#{desc},
	#{createTime},
	#{creator}
	)
 	</insert>

	<!--删除员工风险-->
	<delete id="deleteRisk" parameterType="java.lang.Integer">
		delete
		from
		t_employee_risk
		where
		ID=#{ID}

	</delete>


	<!--更新员工风险-->
	<update id="updateRisk" parameterType="com.isoftstone.humanresources.domain.EmployeeRisk" >
      update
      t_employee_risk
      set
          riskName = #{riskName},
          `desc`=#{desc},
          `modifyTime`=#{modifyTime},
          `modifier`=#{modifier}
      where
        ID = #{ID}
  </update>

	<!--查询员工评价列表-->
	<select id="queryEvaluationList" parameterType="java.lang.Integer"
			resultType="com.isoftstone.humanresources.domain.EmployeeEvaluation">
		select
		ID,
		employeeID,
		content,
		createTime,
		modifyTime,
		creator,
		modifier
		from
		t_employee_evaluation
		<where>
			employeeID=#{employeeID}
		</where>
	</select>

	<!--删除员工风险-->
	<delete id="deleteEvaluation" parameterType="java.lang.Integer">
		delete
		from
		t_employee_evaluation
		where
		ID=#{ID}

	</delete>


	<!--新增员工评价-->
	<insert id="addEvaluation" parameterType="com.isoftstone.humanresources.domain.EmployeeEvaluation" >

	insert into
    t_employee_evaluation
	(
		employeeID,
		content,
		createTime,
		creator

	)
	values(
	#{employeeID},
	#{content},
	#{createTime},
	#{creator}
	)
 	</insert>

	<!--更新员工评价-->
	<update id="updateEvaluation" parameterType="com.isoftstone.humanresources.domain.EmployeeEvaluation" >
      update
      t_employee_evaluation
      set
           content=#{content},
          `modifyTime`=#{modifyTime},
          `modifier`=#{modifier}
      where
        ID = #{ID}
  </update>


	<!--新增员工项目经历-->
	<insert id="addProject" parameterType="com.isoftstone.humanresources.domain.EmployeeProjectInformation" >

	insert into
   t_employee_projects
	(
		employeeID,
		projectID,
		projectDescription,
		entryProjectDate,
		leaveProjectDate,
		projectRole,
		projectContribution,
		leaveProjectCause,
		createTime

	)
	values(
	#{employeeID},
	#{projectID},
	#{projectDescription},
	 STR_TO_DATE(#{entryProjectDate},'%Y-%m-%d'),
	 STR_TO_DATE(#{leaveProjectDate},'%Y-%m-%d'),
	#{projectRole},
	#{projectContribution},
	#{leaveProjectCause},
	STR_TO_DATE(#{createTime},'%Y-%m-%d')

	)
 	</insert>



	<!--更新员工项目经历-->
	<update id="updateProject" parameterType="com.isoftstone.humanresources.domain.EmployeeProjectInformation" >
      update
      t_employee_projects
      set
           projectID=#{projectID},
          `projectDescription`=#{projectDescription},
         entryProjectDate=STR_TO_DATE(#{entryProjectDate},'%Y-%m-%d'),
	     leaveProjectDate=STR_TO_DATE(#{leaveProjectDate},'%Y-%m-%d'),
          `projectRole`=#{projectRole},
          `projectContribution`=#{projectContribution},
          `leaveProjectCause`=#{leaveProjectCause},
        updateTime=STR_TO_DATE(#{updateTime},'%Y-%m-%d')
      where
        ID = #{ID}
  </update>


	<!--查询员工技能列表-->
	<!--<select id="querySkillList" parameterType="java.lang.Long"
			resultMap="empSkill">
		SELECT
		e.skillId,
		e.employeeID,
		e.skill,
		e.proficiency,
		e.createTime,
		e.updateTime,
		e.bak,
		t.configValue
		FROM
		t_employee_skill e
		LEFT JOIN t_system_config t
		ON e.skill=t.configName
		<where>
			<if test="employeeID != null">
			employeeID=#{employeeID,jdbcType=BIGINT}
			</if>
		</where>
	</select>-->
	<!-- 批量导入员工离职信息 -->
	<insert id="leaveEmployee" parameterType="java.util.List">


		REPLACE INTO t_employee_loss
		(
		employeeID,
		leaveDate,
		leaveType,
		leaveCauseSort,
		leaveCause,
		leaveCauseDetial,
		createTime,
		bak
		)
		VALUES
		<if test="null != listOrg and listOrg.size() > 0">
			<foreach collection="listOrg" item="item" index="index"
				separator=",">
				(
				#{item.employeeID},
				STR_TO_DATE(#{item.leaveDate},'%Y-%m-%d'),
				#{item.leaveType},
				#{item.leaveCauseSort},
				#{item.leaveCause},
				#{item.leaveCauseDetial},
				now(),
				#{item.bak}
				)
			</foreach>
		</if>
	</insert>
	<!-- 批量修改用户状态 -->
	<update id="updateUserStatus" parameterType="java.util.List" >
      update
      t_user set status = 1
      where
      employeeID in
      <foreach collection="userList" index="index" item="item" open="(" separator="," close=")">
      #{item.employeeID}
    </foreach> 
  </update>
  <!-- 批量修改员工状态 -->
	<update id="updateEmployeeInfo" parameterType="java.util.List" >
      update
      t_employee
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="issStatus =case" suffix="end,">
        <foreach collection="listOrg" item="item" index="index">
           when employeeID=#{item.employeeID} then #{item.issStatus}
        </foreach>
      </trim>
      <trim prefix="leaveDate =case" suffix="end,">
        <foreach collection="listOrg" item="item" index="index">
           when employeeID=#{item.employeeID} then STR_TO_DATE(#{item.leaveDate},'%Y-%m-%d')
        </foreach>
      </trim>
    </trim>
    where
      employeeID in
      <foreach collection="listOrg" index="index" item="item" open="(" separator="," close=")">
      #{item.employeeID}
    </foreach> 
  </update>

	<!--更新员工图片url-->
	<update id="updateEmpImg" parameterType="com.isoftstone.humanresources.domain.EmployeeInformation" >
      update
      t_employee
      set
		<if test=" imgURL != null ">
			 imgURL = #{imgURL}
		</if>
		<if test=" coverImg != null ">
			 coverImg = #{coverImg}
		</if>
      where
        employeeID = #{employeeID}
  </update>


  <!--查询员工编号-->
  <select id="queryListUserId" resultType="java.lang.Integer">
  SELECT
  employeeID 
  FROM 
  T_USER
  </select>

	<!--查询员工绩效-->
	<select id="queryEmpPer" parameterType="com.isoftstone.humanresources.domain.QueryEmpPerformaceParam"
		resultType="com.isoftstone.humanresources.domain.EmployeePerfomanceVo"	>

		SELECT
		t.employeeID,
		t.start_date as startDate,
		t.end_date as endDate,
		t.`type`,
		t.score,
		t.`level`,
		t.maternity_leave as maternityLeave,
		t.is_gt_45 as isGt45,
		t.is_manage_agreed as isManageAgreed,
		t.remark,
		t.quarter,
		t.year,
		e.employeeName,
		e.costCenter,
		o.organizationName
		FROM
		t_employee_performance t
		INNER
		JOIN (
		SELECT
		employeeID,
		employeeName,
		cardID,
		issStatus,
		isImportant,
		isImportantCore,
		isOnShore,
		officeSpace,
		cooperationModel,
		skill,
		entryDate,
		leaveDate,
		costCenter,
		entryLong,
		workLong,
		birthday,
		graducationSchool,
		huaweiLevel,
		is211,
		reporter,
		reporter_workid,
		AREA,
		mobile,
		businessLine,
		`position`,
		email,
		nameCard,
		BG,
		BD,
		BU,
		CU,
		PDU,
		PO,
		sex,
		organizationID,
		projectTeam,
		bak,
		imgURL
		FROM
		t_employee m
		<where>
			<if test="bD != null and bD !=''">
				BD=#{bD}
			</if>
			<if test="bU != null and bU !=''">
				and  BU=#{bU}
			</if>
			<if test="cU != null and cU !=''">
				and
				CU IN (
				SELECT organizationID FROM t_organization WHERE leader = (
				SELECT leader FROM t_organization WHERE organizationID = #{cU}) AND organizationType = 'CU')
			</if>
			<if test="pDU != null and pDU !=''">
				and   PDU=#{pDU}
			</if>
			<if test="pO != null and pO !=''">
				and   PO=#{pO}
			</if>
			<if test="projectTeam != null and projectTeam !=''">
				and   projectTeam=#{projectTeam}
			</if>
			<if test="employeeID != null and employeeID !=''">
				and   employeeID=#{employeeID}
			</if>
			<if test="employeeName != null and employeeName !=''">
				and
				employeeName LIKE CONCAT(CONCAT('%',#{employeeName}),'%')
			</if>

			<if test="costCenter != null and costCenter !=''">
				and
				costCenter LIKE CONCAT(CONCAT('%',#{costCenter}),'%')
			</if>

		</where>
		)e
		ON t.`employeeID`=e.employeeID
		LEFT JOIN t_organization o
		ON e.projectTeam=o.organizationID
		<where>
			<if test="quarter != null and quarter !=''">
				`quarter`=#{quarter}
			</if>
			<if test="organizationName != null and organizationName !=''">
				and o.organizationName LIKE CONCAT(CONCAT('%',#{organizationName}),'%')
			</if>
		</where>

	</select>

	<!--查询员工月度考勤-->
	<select id="queryEmpWorkTimeMonth" parameterType="com.isoftstone.humanresources.domain.QueryEmpWorkTimeMonthParam"
			resultType="com.isoftstone.humanresources.domain.EmployeeWorkTimeMonthVo"	>

		SELECT
		t.employeeID,
		t.workStatus,
		t.personalStatus,
		t.dayCount,
		t.month,
		t.shouldDays,
		t.actualDays,
		t.shouldTimes,
		t.actualTimes,
		t.holidayTimes,
		t.lateTimes,
		t.LeaveEarlyTimes,
		t.absenteeismTimes,
		t.oweTimes,
		t.overtimeNum,
		t.overtimes,
		t.extendTimes,
		t.notBringPcTimes,
		t.BringPcTimes,
		t.inDay,
		t.outDay,
		t.annualLeave,
		t.restTimes,
		t.marriageLeave,
		t.maternityLeave,
		t.prenatalLeave,
		t.paternityLeave,
		t.breastFeeding,
		t.sickLeave,
		t.funeralLeave,
		t.personalLeave,
		t.overtimeRestTimes,
		t.outsideTimes,
		t.ehs,
		t.insufficientReasons,
		t.noWorkReasons,
		t.monthInsufficientReasons,
		t.bd,
		e.employeeName,
		e.costCenter,
		o.organizationName
		FROM
		t_employee_work_time_month t
		INNER
		JOIN (
		SELECT
		employeeID,
		employeeName,
		cardID,
		issStatus,
		isImportant,
		isImportantCore,
		isOnShore,
		officeSpace,
		cooperationModel,
		skill,
		entryDate,
		leaveDate,
		costCenter,
		entryLong,
		workLong,
		birthday,
		graducationSchool,
		huaweiLevel,
		is211,
		reporter,
		reporter_workid,
		AREA,
		mobile,
		businessLine,
		`position`,
		email,
		nameCard,
		BG,
		BD,
		BU,
		CU,
		PDU,
		PO,
		sex,
		organizationID,
		projectTeam,
		bak,
		imgURL
		FROM
		t_employee m
		<where>
			<if test="bD != null and bD !=''">
				BD=#{bD}
			</if>
			<if test="bU != null and bU !=''">
				and  BU=#{bU}
			</if>
			<if test="cU != null and cU !=''">
				and
				CU
				IN (
				SELECT organizationID FROM t_organization WHERE leader = (
				SELECT leader FROM t_organization WHERE organizationID = #{cU}) AND organizationType = 'CU')
			</if>
			<if test="pDU != null and pDU !=''">
				and   PDU=#{pDU}
			</if>
			<if test="pO != null and pO !=''">
				and   PO=#{pO}
			</if>
			<if test="projectTeam != null and projectTeam !=''">
				and   projectTeam=#{projectTeam}
			</if>
			<if test="employeeID != null and employeeID !=''">
				and   employeeID=#{employeeID}
			</if>
			<if test="employeeName != null and employeeName !=''">
				and
				employeeName LIKE CONCAT(CONCAT('%',#{employeeName}),'%')
			</if>

			<if test="costCenter != null and costCenter !=''">
				and
				costCenter LIKE CONCAT(CONCAT('%',#{costCenter}),'%')
			</if>

		</where>
		)e
		ON t.`employeeID`=e.employeeID
		LEFT JOIN t_organization o
		ON e.projectTeam=o.organizationID
		<where>
			<if test="month != null and month !=''">
				`month`=#{month}
			</if>
			<if test="organizationName != null and organizationName !=''">
				and o.organizationName LIKE CONCAT(CONCAT('%',#{organizationName}),'%')
			</if>
		</where>
	</select>


	<!--查询月份下拉框列表-->
	<select id="queryMonth" resultType="java.lang.String">
		select
		distinct
		`month`
		from
		t_employee_work_time_month
	</select>

	<!--查询操作日志-->
	<select id="queryLog" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
		COUNT(*)
		FROM
		t_operation_logger
		WHERE employeeID = #{employeeID}
		and changeTime &lt;   #{startDate}
		and  #{endDate} &lt;  changeTime
	</select>

	<!--模糊查询员工的信息-->
	<select id="getEmployeeLikeInfo" parameterType="java.lang.String"
			resultMap="employeeInfo">
		SELECT
		<include refid="BASE_COLUMN" />
		FROM
		<include refid="BASE_TABLE" />
		t
		where
		t.employeeID = #{queryID} or t.mobile = #{queryID} or t.email = #{queryID}
	</select>
	<!--查询员工证书列表-->
	<select id="queryEmpCertificateList" parameterType="java.util.Map" resultType="com.isoftstone.humanresources.domain.EmployeeCertificate">
        SELECT
		id,
		certificateType,
		certificateName,
		employeeID,
		image,
		createDate,
		updateDate,
		expirationDate
        FROM
        t_employee_certificate
         WHERE expirationDate &gt; #{date}
         and employeeID=#{employeeID}
	</select>


	<!--查询证书类型下拉框-->
	<select id="queryCertificateType" resultType="com.isoftstone.humanresources.domain.SysConfigResponse">
		SELECT
            configName,
            configValue
        FROM
            t_system_config
        WHERE configType = 'employeeCertificate'
	</select>

	<!--新增证书信息-->
	<insert id="addEmpCertificate" parameterType="com.isoftstone.humanresources.domain.EmployeeCertificate">
		insert into
		t_employee_certificate(
			certificateType,
			certificateName,
			employeeID,
			image,
			createDate,
			expirationDate
		)
		values (
			#{certificateType},
			#{certificateName},
			#{employeeID},
			#{image},
			#{createDate},
			#{expirationDate}
		)

	</insert>

	<!--更新证书信息-->
	<update id="updateCertificate" parameterType="com.isoftstone.humanresources.domain.EmployeeCertificate">
		update
		t_employee_certificate
		set
		certificateType=#{certificateType},
		certificateName=#{certificateName},
		image=#{image},
		updateDate=#{updateDate},
		expirationDate=#{expirationDate}
		where
		id=#{id}


	</update>



</mapper>