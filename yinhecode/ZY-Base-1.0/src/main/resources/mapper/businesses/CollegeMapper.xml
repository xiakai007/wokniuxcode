<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.zy.base.businesses.mapper.CollegeMapper">
    <sql id="countCollegeDetailSql" >
        SELECT
        COUNT(1)
        FROM
        t_college T
        WHERE 1 = 1
        <if test="college.name != null and college.name != ''">
            AND T.name LIKE CONCAT('%',#{college.name},'%')
        </if>
        <if test="college.address != null and college.address != ''">
            AND T.address LIKE CONCAT('%',#{college.address},'%')
        </if>
    </sql>
    
    <sql id="findCollegeDetailSql">
        SELECT
        T.id,
        T.name,
        T.simpleName simplename,
        T.address,
        T.tel,
        T.createUserId createuserid,
        T.createDate createdate,
        T.updateUserId updateuserid,
        T.updateDate updatedate,
        T.imgUrl imgurl,
        T.remark,
        T1.username userName,
        T2.username updateUsername
        FROM
        t_college T
        LEFT JOIN t_user T1 ON (T.createUserId = T1.user_id)
        LEFT JOIN t_user T2 ON (T.updateUserId = T2.user_id)
        WHERE 1 = 1
        <if test="college.name != null and college.name != ''">
            AND T.name LIKE CONCAT('%',#{college.name},'%')
        </if>
        <if test="college.address != null and college.address != ''">
            AND T.address LIKE CONCAT('%',#{college.address},'%')
        </if>
        ORDER BY T.createDate DESC
    </sql>
    <select id="countCollegeDetail" parameterType="college" resultType="long">
        <include refid="countCollegeDetailSql"/>
    </select>
    <select id="findCollegeDetailPage" parameterType="college" resultType="college">
        <include refid="findCollegeDetailSql"/>
    </select>
    <select id="findCollegeDetail" parameterType="college" resultType="college">
        <include refid="findCollegeDetailSql"/>
    </select>

    <select id="findById" parameterType="Integer" resultType="college">
        SELECT
        T.id,
        T.name,
        T.simpleName simplename,
        T.address,
        T.tel,
        T.createUserId createuserid,
        T.createDate createdate,
        T.updateUserId updateuserid,
        T.updateDate updatedate,
        T.imgUrl imgurl,
        T.remark,
        T1.username userName,
        T2.username updateUsername
        FROM
        t_college T
        LEFT JOIN t_user T1 ON (T.createUserId = T1.user_id)
        LEFT JOIN t_user T2 ON (T.updateUserId = T2.user_id)
        WHERE 1 = 1
        AND  T.id = #{collegeId}
    </select>
    
    <select id="findCollageListNotPage" resultType="college">
       SELECT
            T.id,
            T.name,
            T.simpleName simplename,
            T.address,
            T.tel,
            T.createUserId createuserid,
            T.createDate createdate,
            T.updateUserId updateuserid,
            T.updateDate updatedate,
            T.imgUrl imgurl,
            T.remark,
            T1.username userName,
            T2.username updateUsername
       FROM
            t_college T
            LEFT JOIN t_user T1 ON (T.createUserId = T1.user_id)
            LEFT JOIN t_user T2 ON (T.updateUserId = T2.user_id)
       WHERE
            1 = 1
        <if test="college.name != null and college.name != ''">
            AND T.name LIKE CONCAT('%',#{college.name},'%')
        </if>
        <if test="college.address != null and college.address != ''">
            AND T.address LIKE CONCAT('%',#{college.address},'%')
        </if>
        ORDER BY T.createDate DESC
    </select>

	<select id="selectCollegeForSelect" resultType="cc.zy.base.businesses.entity.College">
        SELECT
            college.id,
            college.name,
            college.simplename
        FROM
            t_college college
    </select>

    <select id="isRepetitive" resultType="College" parameterType="String">
        SELECT ID FROM t_college WHERE 1=1 AND name = #{name} OR simpleName = #{simplename}
    </select>
</mapper>
