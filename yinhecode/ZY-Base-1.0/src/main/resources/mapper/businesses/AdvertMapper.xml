<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.zy.base.businesses.mapper.AdvertMapper">
    <sql id="countAdvertDetailSql">
        SELECT
        COUNT(1)
        FROM
        t_advert T
        <trim prefix="WHERE" prefixOverrides="AND" suffix=" ORDER BY `STATUS_ID` ASC">
            <if test="advert.title != null and advert.title != ''">
                AND T.TITLE LIKE CONCAT('%',#{advert.title},'%')
            </if>
            <if test="advert.userName != null and advert.userName != ''">
                AND T.CREATE_USER_ID IN
                (SELECT USER_ID FROM t_user WHERE USERNAME LIKE CONCAT('%',#{advert.userName},'%'))
            </if>
            <if test="advert.statusId != null and advert.statusId != ''">
                AND T.STATUS_ID = #{advert.statusId}
            </if>
        </trim>
    </sql>
    <sql id="findAdvertListSql">
        SELECT
        T.ID,
        T.TITLE,
        T.COMPANY,
        T.CREATE_USER_ID,
        T.CREATE_TIME,
        T.STATUS_ID,
        T1.username userName
        FROM
        t_advert T
        LEFT JOIN t_user T1 ON (T.CREATE_USER_ID = T1.user_id)
        <trim prefix="WHERE" prefixOverrides="AND" suffix=" ORDER BY `STATUS_ID` ASC">
            <if test="advert.title != null and advert.title != ''">
                AND T.TITLE LIKE CONCAT('%',#{advert.title},'%')
            </if>
            <if test="advert.userName != null and advert.userName != ''">
                AND T.CREATE_USER_ID IN
                (SELECT USER_ID FROM t_user WHERE USERNAME LIKE CONCAT('%',#{advert.userName},'%'))
            </if>
            <if test="advert.statusId != null and advert.statusId != ''">
                AND T.STATUS_ID = #{advert.statusId}
            </if>
        </trim>
    </sql>
    <select id="countAdvertDetail" parameterType="advert" resultType="long">
        <include refid="countAdvertDetailSql"/>
    </select>
    <select id="findAdvertDetailPage" parameterType="advert" resultType="advert">
        <include refid="findAdvertListSql"/>
    </select>
    <select id="findAdvertList" parameterType="advert" resultType="advert">
        <include refid="findAdvertListSql"/>
    </select>
    <select id="findById" parameterType="Integer" resultType="advert">
        SELECT T.ID             id,
               T.TITLE          title,
               T.COMPANY        company,
               T.CREATE_USER_ID createUserId,
               T.CREATE_TIME    createTime,
               T.IMG_URL        imgUrl,
               T.CONTENT        content,
               T.VIDEO_URL      videoUrl,
               T.STATUS_ID      statusId,
               T1.username      userName
        FROM t_advert T
                 LEFT JOIN t_user T1 ON (T.CREATE_USER_ID = T1.user_id)
        WHERE T.ID = #{advertId}
    </select>

    <select id="getAdvertLoopId" resultType="Integer">
        SELECT min(ID)
        FROM t_advert_loop
        WHERE ADVERT_ID is NULL
        ORDER BY ID ASC
    </select>
    <update id="updateAdvertLoopById" parameterType="Integer">
        UPDATE
            `t_advert_loop`
        SET ADVERT_ID = NULL
        WHERE ADVERT_ID = #{advertId}
    </update>
    <update id="addAdvertToAdvertLoop">
        UPDATE
            `t_advert_loop`
        SET ADVERT_ID = #{advertId}
        WHERE ID = #{loopId}
    </update>
    <select id="findAdvertLoopList" resultType="advertLoop">
        SELECT T.ID           id,
               T.ADVERT_ID    advertId,
               T1.TITLE       title,
               T2.USERNAME    userName,
               T1.IMG_URL     imgUrl,
               T1.CREATE_TIME createTime
        FROM `t_advert_loop` T
                 LEFT JOIN t_advert T1 ON T.ADVERT_ID = T1.ID
                 LEFT JOIN t_user T2 ON T1.CREATE_USER_ID = T2.USER_ID
        WHERE T.ADVERT_ID IS NOT NULL
    </select>
    <select id="countAdvertLoop" resultType="long">
        SELECT count(1)
        FROM t_advert_loop
        WHERE ADVERT_ID IS NOT NULL
    </select>
    <select id="getAdvertLoopIntegerArray" resultType="int">
        SELECT advert_id
        FROM t_advert_loop
        WHERE ADVERT_ID IS NOT NULL
          AND id > (
            SELECT ID
            FROM t_advert_loop
            WHERE ADVERT_ID = #{advertId}
        )
    </select>
    <select id="getDelAdvertLoopId" parameterType="int" resultType="int">
        SELECT id
        FROM t_advert_loop
        WHERE ADVERT_ID = #{advertId}
    </select>
    <update id="delAndChangeAdvertToAdvertLoop">
        UPDATE
            `t_advert_loop`
        SET ADVERT_ID = NULL
        WHERE ID > #{loopId}
    </update>
    <update id="moveSiteForOrder">
        UPDATE `t_advert_loop`
        SET ADVERT_ID =
                (
                    SELECT t1.aid
                    FROM (
                             SELECT ADVERT_ID aid
                             FROM t_advert_loop
                             WHERE id = #{loopId}) t1
                )
        WHERE ID =
              (SELECT t2.id
               FROM (
                        SELECT ID id
                        FROM t_advert_loop
                        WHERE ADVERT_ID = #{advertId}) t2
              )
    </update>
</mapper>
